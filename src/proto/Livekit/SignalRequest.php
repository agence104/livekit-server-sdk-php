<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_rtc.proto

namespace Livekit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>livekit.SignalRequest</code>
 */
class SignalRequest extends \Google\Protobuf\Internal\Message
{
    protected $message;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Livekit\SessionDescription $offer
     *           initial join exchange, for publisher
     *     @type \Livekit\SessionDescription $answer
     *           participant answering publisher offer
     *     @type \Livekit\TrickleRequest $trickle
     *     @type \Livekit\AddTrackRequest $add_track
     *     @type \Livekit\MuteTrackRequest $mute
     *           mute the participant's published tracks
     *     @type \Livekit\UpdateSubscription $subscription
     *           Subscribe or unsubscribe from tracks
     *     @type \Livekit\UpdateTrackSettings $track_setting
     *           Update settings of subscribed tracks
     *     @type \Livekit\LeaveRequest $leave
     *           Immediately terminate session
     *     @type \Livekit\UpdateVideoLayers $update_layers
     *           Update published video layers
     *     @type \Livekit\SubscriptionPermission $subscription_permission
     *           Update subscriber permissions
     *     @type \Livekit\SyncState $sync_state
     *           sync client's subscribe state to server during reconnect
     *     @type \Livekit\SimulateScenario $simulate
     *           Simulate conditions, for client validations
     *     @type int|string $ping
     *           client triggered ping to server
     *     @type \Livekit\UpdateParticipantMetadata $update_metadata
     *           update a participant's own metadata and/or name
     *     @type \Livekit\Ping $ping_req
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LivekitRtc::initOnce();
        parent::__construct($data);
    }

    /**
     * initial join exchange, for publisher
     *
     * Generated from protobuf field <code>.livekit.SessionDescription offer = 1;</code>
     * @return \Livekit\SessionDescription|null
     */
    public function getOffer()
    {
        return $this->readOneof(1);
    }

    public function hasOffer()
    {
        return $this->hasOneof(1);
    }

    /**
     * initial join exchange, for publisher
     *
     * Generated from protobuf field <code>.livekit.SessionDescription offer = 1;</code>
     * @param \Livekit\SessionDescription $var
     * @return $this
     */
    public function setOffer($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SessionDescription::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * participant answering publisher offer
     *
     * Generated from protobuf field <code>.livekit.SessionDescription answer = 2;</code>
     * @return \Livekit\SessionDescription|null
     */
    public function getAnswer()
    {
        return $this->readOneof(2);
    }

    public function hasAnswer()
    {
        return $this->hasOneof(2);
    }

    /**
     * participant answering publisher offer
     *
     * Generated from protobuf field <code>.livekit.SessionDescription answer = 2;</code>
     * @param \Livekit\SessionDescription $var
     * @return $this
     */
    public function setAnswer($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SessionDescription::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.livekit.TrickleRequest trickle = 3;</code>
     * @return \Livekit\TrickleRequest|null
     */
    public function getTrickle()
    {
        return $this->readOneof(3);
    }

    public function hasTrickle()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.livekit.TrickleRequest trickle = 3;</code>
     * @param \Livekit\TrickleRequest $var
     * @return $this
     */
    public function setTrickle($var)
    {
        GPBUtil::checkMessage($var, \Livekit\TrickleRequest::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.livekit.AddTrackRequest add_track = 4;</code>
     * @return \Livekit\AddTrackRequest|null
     */
    public function getAddTrack()
    {
        return $this->readOneof(4);
    }

    public function hasAddTrack()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.livekit.AddTrackRequest add_track = 4;</code>
     * @param \Livekit\AddTrackRequest $var
     * @return $this
     */
    public function setAddTrack($var)
    {
        GPBUtil::checkMessage($var, \Livekit\AddTrackRequest::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * mute the participant's published tracks
     *
     * Generated from protobuf field <code>.livekit.MuteTrackRequest mute = 5;</code>
     * @return \Livekit\MuteTrackRequest|null
     */
    public function getMute()
    {
        return $this->readOneof(5);
    }

    public function hasMute()
    {
        return $this->hasOneof(5);
    }

    /**
     * mute the participant's published tracks
     *
     * Generated from protobuf field <code>.livekit.MuteTrackRequest mute = 5;</code>
     * @param \Livekit\MuteTrackRequest $var
     * @return $this
     */
    public function setMute($var)
    {
        GPBUtil::checkMessage($var, \Livekit\MuteTrackRequest::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Subscribe or unsubscribe from tracks
     *
     * Generated from protobuf field <code>.livekit.UpdateSubscription subscription = 6;</code>
     * @return \Livekit\UpdateSubscription|null
     */
    public function getSubscription()
    {
        return $this->readOneof(6);
    }

    public function hasSubscription()
    {
        return $this->hasOneof(6);
    }

    /**
     * Subscribe or unsubscribe from tracks
     *
     * Generated from protobuf field <code>.livekit.UpdateSubscription subscription = 6;</code>
     * @param \Livekit\UpdateSubscription $var
     * @return $this
     */
    public function setSubscription($var)
    {
        GPBUtil::checkMessage($var, \Livekit\UpdateSubscription::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Update settings of subscribed tracks
     *
     * Generated from protobuf field <code>.livekit.UpdateTrackSettings track_setting = 7;</code>
     * @return \Livekit\UpdateTrackSettings|null
     */
    public function getTrackSetting()
    {
        return $this->readOneof(7);
    }

    public function hasTrackSetting()
    {
        return $this->hasOneof(7);
    }

    /**
     * Update settings of subscribed tracks
     *
     * Generated from protobuf field <code>.livekit.UpdateTrackSettings track_setting = 7;</code>
     * @param \Livekit\UpdateTrackSettings $var
     * @return $this
     */
    public function setTrackSetting($var)
    {
        GPBUtil::checkMessage($var, \Livekit\UpdateTrackSettings::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Immediately terminate session
     *
     * Generated from protobuf field <code>.livekit.LeaveRequest leave = 8;</code>
     * @return \Livekit\LeaveRequest|null
     */
    public function getLeave()
    {
        return $this->readOneof(8);
    }

    public function hasLeave()
    {
        return $this->hasOneof(8);
    }

    /**
     * Immediately terminate session
     *
     * Generated from protobuf field <code>.livekit.LeaveRequest leave = 8;</code>
     * @param \Livekit\LeaveRequest $var
     * @return $this
     */
    public function setLeave($var)
    {
        GPBUtil::checkMessage($var, \Livekit\LeaveRequest::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Update published video layers
     *
     * Generated from protobuf field <code>.livekit.UpdateVideoLayers update_layers = 10;</code>
     * @return \Livekit\UpdateVideoLayers|null
     */
    public function getUpdateLayers()
    {
        return $this->readOneof(10);
    }

    public function hasUpdateLayers()
    {
        return $this->hasOneof(10);
    }

    /**
     * Update published video layers
     *
     * Generated from protobuf field <code>.livekit.UpdateVideoLayers update_layers = 10;</code>
     * @param \Livekit\UpdateVideoLayers $var
     * @return $this
     */
    public function setUpdateLayers($var)
    {
        GPBUtil::checkMessage($var, \Livekit\UpdateVideoLayers::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Update subscriber permissions
     *
     * Generated from protobuf field <code>.livekit.SubscriptionPermission subscription_permission = 11;</code>
     * @return \Livekit\SubscriptionPermission|null
     */
    public function getSubscriptionPermission()
    {
        return $this->readOneof(11);
    }

    public function hasSubscriptionPermission()
    {
        return $this->hasOneof(11);
    }

    /**
     * Update subscriber permissions
     *
     * Generated from protobuf field <code>.livekit.SubscriptionPermission subscription_permission = 11;</code>
     * @param \Livekit\SubscriptionPermission $var
     * @return $this
     */
    public function setSubscriptionPermission($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SubscriptionPermission::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * sync client's subscribe state to server during reconnect
     *
     * Generated from protobuf field <code>.livekit.SyncState sync_state = 12;</code>
     * @return \Livekit\SyncState|null
     */
    public function getSyncState()
    {
        return $this->readOneof(12);
    }

    public function hasSyncState()
    {
        return $this->hasOneof(12);
    }

    /**
     * sync client's subscribe state to server during reconnect
     *
     * Generated from protobuf field <code>.livekit.SyncState sync_state = 12;</code>
     * @param \Livekit\SyncState $var
     * @return $this
     */
    public function setSyncState($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SyncState::class);
        $this->writeOneof(12, $var);

        return $this;
    }

    /**
     * Simulate conditions, for client validations
     *
     * Generated from protobuf field <code>.livekit.SimulateScenario simulate = 13;</code>
     * @return \Livekit\SimulateScenario|null
     */
    public function getSimulate()
    {
        return $this->readOneof(13);
    }

    public function hasSimulate()
    {
        return $this->hasOneof(13);
    }

    /**
     * Simulate conditions, for client validations
     *
     * Generated from protobuf field <code>.livekit.SimulateScenario simulate = 13;</code>
     * @param \Livekit\SimulateScenario $var
     * @return $this
     */
    public function setSimulate($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SimulateScenario::class);
        $this->writeOneof(13, $var);

        return $this;
    }

    /**
     * client triggered ping to server
     *
     * Generated from protobuf field <code>int64 ping = 14;</code>
     * @return int|string
     */
    public function getPing()
    {
        return $this->readOneof(14);
    }

    public function hasPing()
    {
        return $this->hasOneof(14);
    }

    /**
     * client triggered ping to server
     *
     * Generated from protobuf field <code>int64 ping = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPing($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(14, $var);

        return $this;
    }

    /**
     * update a participant's own metadata and/or name
     *
     * Generated from protobuf field <code>.livekit.UpdateParticipantMetadata update_metadata = 15;</code>
     * @return \Livekit\UpdateParticipantMetadata|null
     */
    public function getUpdateMetadata()
    {
        return $this->readOneof(15);
    }

    public function hasUpdateMetadata()
    {
        return $this->hasOneof(15);
    }

    /**
     * update a participant's own metadata and/or name
     *
     * Generated from protobuf field <code>.livekit.UpdateParticipantMetadata update_metadata = 15;</code>
     * @param \Livekit\UpdateParticipantMetadata $var
     * @return $this
     */
    public function setUpdateMetadata($var)
    {
        GPBUtil::checkMessage($var, \Livekit\UpdateParticipantMetadata::class);
        $this->writeOneof(15, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.livekit.Ping ping_req = 16;</code>
     * @return \Livekit\Ping|null
     */
    public function getPingReq()
    {
        return $this->readOneof(16);
    }

    public function hasPingReq()
    {
        return $this->hasOneof(16);
    }

    /**
     * Generated from protobuf field <code>.livekit.Ping ping_req = 16;</code>
     * @param \Livekit\Ping $var
     * @return $this
     */
    public function setPingReq($var)
    {
        GPBUtil::checkMessage($var, \Livekit\Ping::class);
        $this->writeOneof(16, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getMessage()
    {
        return $this->whichOneof("message");
    }

}

