<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_ingress.proto

namespace Livekit\IngressState;

use UnexpectedValueException;

/**
 * Protobuf type <code>livekit.IngressState.Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>ENDPOINT_INACTIVE = 0;</code>
     */
    const ENDPOINT_INACTIVE = 0;
    /**
     * Generated from protobuf enum <code>ENDPOINT_BUFFERING = 1;</code>
     */
    const ENDPOINT_BUFFERING = 1;
    /**
     * Generated from protobuf enum <code>ENDPOINT_PUBLISHING = 2;</code>
     */
    const ENDPOINT_PUBLISHING = 2;
    /**
     * Generated from protobuf enum <code>ENDPOINT_ERROR = 3;</code>
     */
    const ENDPOINT_ERROR = 3;
    /**
     * Generated from protobuf enum <code>ENDPOINT_COMPLETE = 4;</code>
     */
    const ENDPOINT_COMPLETE = 4;

    private static $valueToName = [
        self::ENDPOINT_INACTIVE => 'ENDPOINT_INACTIVE',
        self::ENDPOINT_BUFFERING => 'ENDPOINT_BUFFERING',
        self::ENDPOINT_PUBLISHING => 'ENDPOINT_PUBLISHING',
        self::ENDPOINT_ERROR => 'ENDPOINT_ERROR',
        self::ENDPOINT_COMPLETE => 'ENDPOINT_COMPLETE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Livekit\IngressState_Status::class);

