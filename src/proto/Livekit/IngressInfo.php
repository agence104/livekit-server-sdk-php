<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_ingress.proto

namespace Livekit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>livekit.IngressInfo</code>
 */
class IngressInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string ingress_id = 1;</code>
     */
    protected $ingress_id = '';
    /**
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string stream_key = 3;</code>
     */
    protected $stream_key = '';
    /**
     * URL to point the encoder to for push (RTMP, WHIP), or location to pull media from for pull (URL)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     */
    protected $url = '';
    /**
     * for RTMP input, it'll be a rtmp:// URL
     * for FILE input, it'll be a http:// URL
     * for SRT input, it'll be a srt:// URL
     *
     * Generated from protobuf field <code>.livekit.IngressInput input_type = 5;</code>
     */
    protected $input_type = 0;
    /**
     * Generated from protobuf field <code>bool bypass_transcoding = 13;</code>
     */
    protected $bypass_transcoding = false;
    /**
     * Generated from protobuf field <code>.livekit.IngressAudioOptions audio = 6;</code>
     */
    protected $audio = null;
    /**
     * Generated from protobuf field <code>.livekit.IngressVideoOptions video = 7;</code>
     */
    protected $video = null;
    /**
     * Generated from protobuf field <code>string room_name = 8;</code>
     */
    protected $room_name = '';
    /**
     * Generated from protobuf field <code>string participant_identity = 9;</code>
     */
    protected $participant_identity = '';
    /**
     * Generated from protobuf field <code>string participant_name = 10;</code>
     */
    protected $participant_name = '';
    /**
     * Generated from protobuf field <code>bool reusable = 11;</code>
     */
    protected $reusable = false;
    /**
     * Description of error/stream non compliance and debug info for publisher otherwise (received bitrate, resolution, bandwidth)
     *
     * Generated from protobuf field <code>.livekit.IngressState state = 12;</code>
     */
    protected $state = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ingress_id
     *     @type string $name
     *     @type string $stream_key
     *     @type string $url
     *           URL to point the encoder to for push (RTMP, WHIP), or location to pull media from for pull (URL)
     *     @type int $input_type
     *           for RTMP input, it'll be a rtmp:// URL
     *           for FILE input, it'll be a http:// URL
     *           for SRT input, it'll be a srt:// URL
     *     @type bool $bypass_transcoding
     *     @type \Livekit\IngressAudioOptions $audio
     *     @type \Livekit\IngressVideoOptions $video
     *     @type string $room_name
     *     @type string $participant_identity
     *     @type string $participant_name
     *     @type bool $reusable
     *     @type \Livekit\IngressState $state
     *           Description of error/stream non compliance and debug info for publisher otherwise (received bitrate, resolution, bandwidth)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LivekitIngress::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string ingress_id = 1;</code>
     * @return string
     */
    public function getIngressId()
    {
        return $this->ingress_id;
    }

    /**
     * Generated from protobuf field <code>string ingress_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIngressId($var)
    {
        GPBUtil::checkString($var, True);
        $this->ingress_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string stream_key = 3;</code>
     * @return string
     */
    public function getStreamKey()
    {
        return $this->stream_key;
    }

    /**
     * Generated from protobuf field <code>string stream_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setStreamKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->stream_key = $var;

        return $this;
    }

    /**
     * URL to point the encoder to for push (RTMP, WHIP), or location to pull media from for pull (URL)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * URL to point the encoder to for push (RTMP, WHIP), or location to pull media from for pull (URL)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * for RTMP input, it'll be a rtmp:// URL
     * for FILE input, it'll be a http:// URL
     * for SRT input, it'll be a srt:// URL
     *
     * Generated from protobuf field <code>.livekit.IngressInput input_type = 5;</code>
     * @return int
     */
    public function getInputType()
    {
        return $this->input_type;
    }

    /**
     * for RTMP input, it'll be a rtmp:// URL
     * for FILE input, it'll be a http:// URL
     * for SRT input, it'll be a srt:// URL
     *
     * Generated from protobuf field <code>.livekit.IngressInput input_type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setInputType($var)
    {
        GPBUtil::checkEnum($var, \Livekit\IngressInput::class);
        $this->input_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool bypass_transcoding = 13;</code>
     * @return bool
     */
    public function getBypassTranscoding()
    {
        return $this->bypass_transcoding;
    }

    /**
     * Generated from protobuf field <code>bool bypass_transcoding = 13;</code>
     * @param bool $var
     * @return $this
     */
    public function setBypassTranscoding($var)
    {
        GPBUtil::checkBool($var);
        $this->bypass_transcoding = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.livekit.IngressAudioOptions audio = 6;</code>
     * @return \Livekit\IngressAudioOptions|null
     */
    public function getAudio()
    {
        return $this->audio;
    }

    public function hasAudio()
    {
        return isset($this->audio);
    }

    public function clearAudio()
    {
        unset($this->audio);
    }

    /**
     * Generated from protobuf field <code>.livekit.IngressAudioOptions audio = 6;</code>
     * @param \Livekit\IngressAudioOptions $var
     * @return $this
     */
    public function setAudio($var)
    {
        GPBUtil::checkMessage($var, \Livekit\IngressAudioOptions::class);
        $this->audio = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.livekit.IngressVideoOptions video = 7;</code>
     * @return \Livekit\IngressVideoOptions|null
     */
    public function getVideo()
    {
        return $this->video;
    }

    public function hasVideo()
    {
        return isset($this->video);
    }

    public function clearVideo()
    {
        unset($this->video);
    }

    /**
     * Generated from protobuf field <code>.livekit.IngressVideoOptions video = 7;</code>
     * @param \Livekit\IngressVideoOptions $var
     * @return $this
     */
    public function setVideo($var)
    {
        GPBUtil::checkMessage($var, \Livekit\IngressVideoOptions::class);
        $this->video = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string room_name = 8;</code>
     * @return string
     */
    public function getRoomName()
    {
        return $this->room_name;
    }

    /**
     * Generated from protobuf field <code>string room_name = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setRoomName($var)
    {
        GPBUtil::checkString($var, True);
        $this->room_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string participant_identity = 9;</code>
     * @return string
     */
    public function getParticipantIdentity()
    {
        return $this->participant_identity;
    }

    /**
     * Generated from protobuf field <code>string participant_identity = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setParticipantIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->participant_identity = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string participant_name = 10;</code>
     * @return string
     */
    public function getParticipantName()
    {
        return $this->participant_name;
    }

    /**
     * Generated from protobuf field <code>string participant_name = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setParticipantName($var)
    {
        GPBUtil::checkString($var, True);
        $this->participant_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool reusable = 11;</code>
     * @return bool
     */
    public function getReusable()
    {
        return $this->reusable;
    }

    /**
     * Generated from protobuf field <code>bool reusable = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setReusable($var)
    {
        GPBUtil::checkBool($var);
        $this->reusable = $var;

        return $this;
    }

    /**
     * Description of error/stream non compliance and debug info for publisher otherwise (received bitrate, resolution, bandwidth)
     *
     * Generated from protobuf field <code>.livekit.IngressState state = 12;</code>
     * @return \Livekit\IngressState|null
     */
    public function getState()
    {
        return $this->state;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     * Description of error/stream non compliance and debug info for publisher otherwise (received bitrate, resolution, bandwidth)
     *
     * Generated from protobuf field <code>.livekit.IngressState state = 12;</code>
     * @param \Livekit\IngressState $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkMessage($var, \Livekit\IngressState::class);
        $this->state = $var;

        return $this;
    }

}

